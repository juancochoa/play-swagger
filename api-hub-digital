---
swagger: "2.0"
info:
  title: api-hub-digital
  version: 1.0.0
  description: Especificaci√≥n de las APIs del hub digital
  termsOfService: https://www.qiip.com.mx/assets/documentos/mx_terminos_y_condiciones.pdf
  contact:
    name: API Support
    url: http://www.swagger.io/support
    email: support@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: api2.qiip.com.co
basePath: /dev
paths:
  /usuario/leads/registrar:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: correlation-id
        in: header
        required: true
        type: string
      - name: X-nbm-auth
        in: header
        required: true
        type: string
      - name: RegistrarLeadRequest
        description: |-
          A JSON object as a payload is required within the body of the request. The following attributes of the JSON object are detailed below:
          - `idUsuario` *(string, required)* - Corresponde al id del usuario
          - `estado` *(string, optional)* - Estado inicial del usuario, valor por defecto NUEVO.
          - `tipo` *(string, optional)* - Especifica el tipo de usuario.
        schema:
          $ref: '#/definitions/RegistrarLeadRequest'
        in: body
        required: true
        x-example:
          idUsuario: "123"
          estado: "0"
          tipo: "1"
      responses:
        "200":
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              type: string
          schema:
            $ref: '#/definitions/RegistrarLeadResponse'
          examples:
            application/json:
              id: "123"
              idUsuario: "123"
              estado: prueba
              fechaActualizacion: 2019-04-01T09:23:54.412-05:00
              fechaCreacion: 2019-04-01T09:23:54.412-05:00
              tipo: prueba
        "400":
          description: 400 response
          headers:
            Access-Control-Allow-Origin:
              type: string
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              type: string
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Registar leads
      description: Se realiza el registro de leads para vincular posteriormente nuevos
        usuarios.
      x-amazon-apigateway-integration:
        uri: http://${stageVariables.endpoint}/usuario/leads/registrar
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.Accept-Encoding: '''identity'''
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: POST
        type: http_proxy
    options:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
          schema:
            $ref: '#/definitions/Empty'
      x-amazon-apigateway-integration:
        uri: http://${stageVariables.endpoint}/usuario/version
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.Accept-Encoding: '''identity'''
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        connectionId: ${stageVariables.vpcLinkId}
        httpMethod: GET
        type: http_proxy
definitions:
  RegistrarLeadResponse:
    required:
    - estado
    - fechaActualizacion
    - fechaCreacion
    - id
    - idUsuario
    - tipo
    type: object
    properties:
      id:
        type: string
      idUsuario:
        type: string
      estado:
        type: string
      fechaActualizacion:
        type: string
      fechaCreacion:
        type: string
      tipo:
        type: string
  RegistrarLeadRequest:
    required:
    - idUsuario
    - estado
    - tipo
    type: object
    properties:
      idUsuario:
        type: string
      estado:
        type: string
      tipo:
        type: string
  ErrorResponse:
    required:
    - campos
    - mensaje
    type: object
    properties:
      mensaje:
        description: ""
        type: string
      campos:
        description: ""
        type: array
        items:
          type: string
  Empty:
    type: object
securityDefinitions:
  sigv4:
    type: apiKey
    name: Authorization
    in: header
    x-amazon-apigateway-authtype: awsSigv4
  custom_auth_by_request_dev:
    type: apiKey
    name: Unused
    in: header
    x-amazon-apigateway-authtype: custom
    x-amazon-apigateway-authorizer:
      authorizerUri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:663438867067:function:custom_auth_by_request_dev/invocations
      authorizerCredentials: arn:aws:iam::663438867067:role/lambdaCallerRole_dev
      authorizerResultTtlInSeconds: 0
      type: request
x-amazon-apigateway-gateway-responses:
  INVALID_API_KEY:
    statusCode: 403
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
    responseTemplates:
      application/json: '{"INVALID API KEY message":$context.error.messageString}'
  EXPIRED_TOKEN:
    statusCode: 403
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: '''GET,OPTIONS,POST'''
      gatewayresponse.header.Access-Control-Allow-Credentials: '''true'''
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
    responseTemplates:
      application/json: '{"EXPIRED TOKEN message":$context.error.messageString}'
  UNAUTHORIZED:
    statusCode: 401
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
      gatewayresponse.header.Access-Control-Allow-Credentials: '''true'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
    responseTemplates:
      application/json: '{"UNAUTHORIZED message":$context.error.messageString}'
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
      gatewayresponse.header.Access-Control-Allow-Credentials: '''true'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
  INVALID_SIGNATURE:
    statusCode: 403
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
      gatewayresponse.header.Access-Control-Allow-Credentials: '''true'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
    responseTemplates:
      application/json: '{"INVALID SIGNATURE message":$context.error.messageString}'
  ACCESS_DENIED:
    statusCode: 403
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: '''GET,OPTIONS,POST'''
      gatewayresponse.header.Access-Control-Allow-Credentials: '''true'''
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
    responseTemplates:
      application/json: '{"ACCESS DENIED message":$context.error.messageString}'
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
      gatewayresponse.header.Access-Control-Allow-Credentials: '''true'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
x-amazon-apigateway-binary-media-types:
- multipart/form-data
- application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
- image/png
- image/jpg
- image/jpeg
